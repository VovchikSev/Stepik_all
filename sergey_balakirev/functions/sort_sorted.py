

"""
Подвиг 2. На вход поступает список целых чисел, записанных в одну строчку через пробел. Преобразуйте сначала эту строку
в список из целых чисел, а затем список в кортеж из целых чисел. То есть, в программе будет две разные коллекции:
список и кортеж. Отсортируйте по возрастанию значений эти коллекции методом sort, если это возможно, а иначе - примените
функцию sorted.
На экран ничего выводить не нужно, только сформировать две отсортированные коллекции: lst (список)
- результат сортировки списка; tp_lst (кортеж) - результат сортировки кортежа.
P.S. На результаты сортировок обязательно должны ссылаться переменные с именами lst и tp_lst!
Sample Input: -2 -1 8 11 4 5
Sample Output: True
"""

# lst = sorted(list(map(int, input().split())))
# tp_lst = tuple(lst)
# print(lst)
# print(tp_lst)


"""
Подвиг 3. На вход функции с именем get_sort поступает словарь, например, такой:
d = {'cat': 'кот', 'horse': 'лошадь', 'tree': 'дерево', 'dog': 'собака', 'book': 'книга'}
Необходимо отсортировать словарь d по убыванию ключей (лексикографическая сортировка строк) и возвратить список из
соответствующих значений ключей словаря. Например, для указанного словаря d, результатом должен быть список:
['дерево', 'лошадь', 'собака', 'кот', 'книга']
Сигнатура функции get_sort должна быть следующей:
def get_sort(d): ...
В программе только определить функцию, вызывать ее не нужно и что-либо выводить на экран тоже не нужно.
P. S. Подсказка: список в функции get_sort лучше всего формировать с помощью генератора списков.
Sample Input:

Sample Output:

True
"""