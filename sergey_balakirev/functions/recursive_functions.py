
# Подвиг 2. Вводится целое положительное число N. Необходимо написать рекурсивную функцию с именем get_rec_N, 
# которая отображает на экране последовательность целых чисел от 1 до N (включительно). 
# Каждое число выводится с новой строки. В качестве параметра функция get_rec_N должна принимать одно числовое значение.
#  То есть, иметь только один параметр. Начальный вызов функции будет выглядеть так: get_rec_N(N)
# def get_rec_N(in_value:int):    
#     if in_value > 1:
#         get_rec_N(in_value - 1)
#     print(in_value)


# Подвиг 3. Вводится список целых чисел в одну строчку через пробел. Необходимо вычислить сумму этих введенных значений,
# используя рекурсивную функцию (для перебора элементов списка) с именем get_rec_sum. Функция должна возвращать 
# значение суммы. (Выводить на экран она ничего не должна). 
# Вызовите эту функцию и выведите вычисленное значение суммы на экран.
# 8 11 -5 4 3

# def get_rec_sum(in_lst):
#     if not in_lst:
#         return 0
#     else:
#         return in_lst[0] + get_rec_sum(in_lst[1:])


# in_lst = list(map(int, input().split()))
# print(get_rec_sum(in_lst))


# Подвиг 4. Вводится натуральное число N. Необходимо с помощью рекурсивной функции fib_rec(N, f=[]) 
# (здесь N - общее количество чисел Фибоначчи; f - начальный список этих чисел) сформировать последовательность 
# чисел Фибоначчи по правилу: первые два числа равны 1 и 1, а каждое следующе значение равно сумме двух предыдущих. 
# Пример такой последовательности для первых 7 чисел: 1, 1, 2, 3, 5, 8, 13, ...


N = int(input())

def  fib_rec(N, f=[]):
    if not f:
        f.append(1)
        f.append(1)        
    else:
        f.append(f[len(f) - 1] + f[len(f)])
