"""
Подвиг 1. Вводятся два списка целых чисел. Необходимо попарно перебрать их элементы и перемножить между собой.
При реализации программы используйте функции zip и map. Выведите на экран первые три значения, используя функцию next.
Значения выводятся в строчку через пробел. (Полагается, что три выходных значения всегда будут присутствовать).
Sample Input:
-7 8 11 -1 3
1 2 3 4 5 6 7 8 9 10
Sample Output:
-7 16 33
"""
# in_s1 = map(int, "-7 8 11 -1 3".split()) # map(int, input().split())
# in_s2 = map(int, "1 2 3 4 5 6 7 8 9 10".split()) # map(int, input().split())
#
# zip_iter = zip(in_s1, in_s2)
# for _ in range(3):
#     x1, x2 = next(zip_iter)
#     print(x1 * x2, end=" ")

"""
Подвиг 2. Вводится неравномерная таблица целых чисел. С помощью функции zip выровнить эту таблицу, приведя ее к
прямоугольному виду, отбросив выходящие элементы. Вывести результат на экран в виде такой же таблицы чисел.
P. S. Для считывания списка целиком в программе уже записаны начальные строчки. lst_in задан.
Sample Input:
1 2 3 4 5 6
3 4 5 6
7 8 9
9 7 5 3 2
Sample Output:
1 2 3
3 4 5
7 8 9
9 7 5
"""

# lst_in = ['1 2 3 4 5 6', '3 4 5 6', '7 8 9', '9 7 5 3 2']
# ls_values = [list(map(int, val.split())) for val in lst_in]
# # out_ls = list(*zip(*ls_values))
#
# # out_ls = list(zip(*zip(*ls_values)))
# [print(*val) for val in list(zip(*zip(*ls_values)))]


"""
Подвиг 3. Вводится таблица целых чисел. Необходимо сначала эту таблицу представить двумерным списком чисел, а затем,
с помощью функции zip выполнить транспонирование этой таблицы (то есть, строки заменить на соответствующие столбцы).
Результат вывести на экран в виде таблицы чисел (числа в строках следуют через пробел).
P. S. Для считывания списка целиком в программе уже записаны начальные строчки. lst_in задан.
Sample Input:
1 2 3 4
5 6 7 8
9 8 7 6
Sample Output:
1 5 9
2 6 8
3 7 7
4 8 6
"""
# lst_in = ['1 2 3 4', '5 6 7 8', '9 8 7 6']
# for i in zip(*[list(map(int, val.split())) for val in lst_in]):
#     print(*i, sep=" ")


"""
Подвиг 4. Вводится строка из слов, записанных через пробел. Необходимо на их основе составить прямоугольную таблицу
из трех столбцов и N строк (число строк столько, сколько получится). Лишнее (выходящее) слово - отбросить.
Реализовать эту программу с использованием функции zip. Результат отобразить на экране в виде прямоугольной таблицы
из слов, записанных через пробел (в каждой строчке).
Sample Input: Москва Уфа Тула Самара Омск Воронеж Владивосток Лондон Калининград Севастополь
Sample Output:
Москва Уфа Тула
Самара Омск Воронеж
Владивосток Лондон Калининград
"""
# cities = input().split()
# # cities = "Москва Уфа Тула Самара Омск Воронеж Владивосток Лондон Калининград Севастополь".split()
# cnt = 3
# table = list()
# for idx in range(cnt):
#     table.append([city for index, city in enumerate(cities) if index % 3 == idx])
# # print(table)
# union = zip(*table)
# [print(*value) for value in union]


"""
Подвиг 5. Вводится строка. Требуется, используя введенную строку, сформировать N=10 пар кортежей в формате:
(символ, порядковый индекс)
Первый индекс имеет значение 0. Строка может быть короче 10 символов, а может быть и длиннее. То есть, 
число пар может быть 10 и менее. Используя функцию zip сформируйте указанные кортежи и сохраните в список с именем lst.
Программа ничего не должна отображать на экране, только формировать список из кортежей.
Sample Input: Python дай мне силы пройти этот курс до конца!
Sample Output: True
"""
# считывание строки в переменную s (эту переменную в программе не менять)
s = input()

# здесь продолжайте программу
# создаём коллекцию индексов
indexes = list()
for index, char in enumerate(s):
    indexes.append(index)

# создаём кортеж из кортежей
pairs = tuple(zip(s, indexes))
# для проверки -> print(pairs)

if len(pairs) < 10:
    lst = list(pairs)
else:
    lst = list([pairs[i] for i in range(10)])