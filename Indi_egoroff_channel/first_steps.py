
# s = input().split()
# for ch in s:
#       print(f'Simvol code {ch} is {ord(ch)}.')



# 1.10 Деление нацело и по остатку отрицательных чисел в Python

# 1.9 Округление вверх и округление вниз


# 1.8 Логический тип Bool. Операции сравнения

# '''
# На вход поступают три целых числа - стороны треугольника.
# Необходимо вывести True, если данные стороны образуют прямоугольный треугольник, в противном случае - False.
# Для написания программы необходимо вспомнить теорему Пифагора
# Сделать задачу необходимо без использования условного оператора.
# '''
# x, y, z = map(int, input().split())
# print(x ** 2 + y ** 2 == z ** 2 or x ** 2 == y ** 2 + z ** 2 or y ** 2 == x ** 2 + z ** 2 )  
# элегантное решение
# a, b, c = sorted(int(i)**2 for i in input().split())
# print(a + b == c)


# 1.7 Деление нацело и деление по остатку

# '''
# Электронные часы показывают время в формате h:mm:ss, то есть сначала записывается количество часов в диапазоне 
# от 0 до 23, потом обязательно двузначное количество минут, затем обязательно двузначное количество секунд. 
# Количество минут и секунд при необходимости дополняются до двузначного числа нулями.
# Программа получает на вход число n - количество секунд, которое прошло с начала суток.
# 3721
# 1:02:01
# '''
# start_secunds = int(input()) % (3600 * 24)
# hours = start_secunds // 3600
# minutes = start_secunds % 3600 // 60
# seconds = start_secunds % 60

# print(f'{hours:2d}:{minutes:02d}:{seconds:02d}')


# '''
# Дано целое число n. Выведите следующее за ним четное число.

# Задачу необходимо решить целочисленными операциями без использования условных операторов и\или циклов.
# '''
# n = int(input())
# print(n + 2 - n % 2)


# '''
# Дано число n. С начала суток прошло n минут. 
# Определите, сколько часов и минут будут показывать электронные часы в этот момент.
# Программа должна вывести два числа: количество часов (от 0 до 23) и количество минут (от 0 до 59).
# Учтите, что число n может быть больше, чем количество минут в сутках.
# 137
# 2 17
# '''

# in_minut = int(input()) % (24 * 60)
# print(in_minut//60, in_minut%60)


# 1.6 Функция print()
# '''
# Петя учится в школе и очень любит математику. Уже несколько занятий они с классом проходят арифметические выражения. 
# На последнем уроке учительница написала на доске три положительных целых числа a, b, c. Задание заключалось в том, 
# чтобы расставить между этими числами знаки операций '+' и '*', а также, возможно, скобки. Значение получившегося 
# выражения должно быть как можно больше. Рассмотрим пример: пусть учительница выписала на доску числа 1, 2 и 3. 
# Вот некоторые варианты расстановки знаков и скобок:
# 1+2*3=7
# 1*(2+3)=5
# 1*2*3=6
# (1+2)*3=9
# Обратите внимание на то, что знаки операций можно вставлять только между a и b, а также между b и c, то есть нельзя 
# менять числа местами. Так, в приведенном примере нельзя получить выражение (1+3)*2.
# Легко убедиться, что максимальное значение, которое можно получить, — это 9.
# Ваша задача — по заданным a, b и c вывести, какое максимальное значение выражения можно получить.
# '''
# a, b, c = int(input()), int(input()), int(input())
# print(max(a+b+c,a*b*c,(a+b)*c,a*(b+c)))


# '''
# Бандиты Гарри и Ларри отдыхали на природе. Решив пострелять, они выставили на бревно несколько банок из-под кока-колы 
# (не больше 10). Гарри начал простреливать банки по порядку, начиная с самой левой, Ларри — с самой правой. 
# В какой-то момент получилось так, что они одновременно прострелили одну и ту же последнюю банку.

# Гарри возмутился и сказал, что Ларри должен ему кучу денег за то, что тот лишил его удовольствия прострелить несколько 
# банок. В ответ Ларри сказал, что Гарри должен ему еще больше денег по тем же причинам. Они стали спорить кто кому сколько 
# должен, но никто из них не помнил сколько банок было в начале, а искать простреленные банки по всей округе было неохота. 
# Каждый из них помнил только, сколько банок прострелил он сам.
# Определите по этим данным, сколько банок не прострелил Гарри и сколько банок не прострелил Ларри.
# Sample Input 1:
# 4 7
# Sample Output 1:
# 6 3
# '''
# garry, larry = map(int, input().split())
# print(larry - 1, garry - 1)


# '''
# Даны значения двух моментов времени, принадлежащих одним и тем же суткам: часы, минуты и секунды 
# для каждого из моментов времени. Известно, что второй момент времени наступил не раньше первого. 
# Определите, сколько секунд прошло между двумя моментами времени.
# Входные данные:
# Программа на вход получает три целых числа: часы, минуты, секунды, задающие первый момент времени 
# и три целых числа, задающих второй момент времени.
# Sample Input 1:
# 1
# 1
# 1
# 2
# 2
# 2
# Выходные данные
# Выведите число секунд между этими моментами времени.
# Sample Output 1:
# 3661
# '''
# # start_sec = int(input()) * 60 * 60 + int(input()) * 60 + int(input())
# # stop_sec = int(input()) * 60 * 60 + int(input()) * 60 + int(input())
# # print(stop_sec - start_sec)
# print(abs((int(input()) * 60 * 60 + int(input()) * 60 + int(input())) - (int(input()) * 60 * 60 + int(input()) * 60 + int(input()))))


# '''
# Напишите программу, которая вычисляет средний балл ученика за решение четырех задач по введенным оценкам (числа от 2 до 5).
# Оценки вводятся в одну строку, могут быть только целые числа от 2 до 5
# '''
# list_balls = list(map(int, input().split()))
# print(sum(list_balls) / len(list_balls))

# '''
# Известно, что на обработку одного квадратного метра панели требуется 1г сульфида. 
# Всего необходимо обработать N прямоугольных панелей размером A на B метров. Вам необходимо подсчитать, 
# сколько всего сульфида необходимо на обработку всех панелей. 
# И не забудьте, что панели требуют обработки с обеих сторон.
# На вход программе подаются 3 положительных целых числа N,A,B
# Sample Input:
# 5 2 3
# Sample Output:
# 60
# '''
# n, a, b = map(int, input().split())
# print(a * b * n * 2)
# # all_p = (a * b * 2) * n


# '''
# Однажды, посетив магазин канцелярских товаров, Вася купил X карандашей, Y ручек и Z фломастеров. 
# Известно, что цена ручки на 2 рубля больше цены карандаша и на 7 рублей меньше цены фломастера. 
# Также известно, что стоимость карандаша составляет 3 рубля. Требуется определить общую стоимость покупки.
# X карандашей
# Y ручек 
# Z фломастеров
# '''
# x, y, z = map(int, input().split())
# cost_x = 3
# cost_y = cost_x + 2
# cost_z = cost_y + 7
# print(sum([cost_x * x, cost_y * y, cost_z * z]))



# '''
# Петя, Катя и Сережа делают из бумаги журавликов. Вместе они сделали S журавликов. 
# Сколько журавликов сделал каждый ребенок, если известно, что Петя и Сережа сделали одинаковое количество журавликов, 
# а Катя сделала в два раза больше журавликов, чем Петя и Сережа вместе?
# 0 Петя
# 1 Катя
# 2 Сережа
# '''
# all = int(input())
# kat = all // 3 * 2
# pet = int(all // 3 / 2)
# ser = int(pet)
# print(pet, kat, ser)