# функция мап (map) и генераторы с нею.
"""
Подвиг 1. На вход поступает список из вещественных чисел, записанных в строку через пробел. С помощью функции map
преобразовать числа в строке в их вещественное представление и отобразить первые три числа.
(Полагается, что минимум три вещественных числа имеются). Реализовать извлечение чисел через функцию next.
Результат отобразить в строку через пробел.
Sample Input: 4.35 -10.6 1.0 200.34 0.56
Sample Output: 4.35 -10.6 1.0
"""
# in_gen = map(float, input().split())
# print(*[next(in_gen) for val in range(3)])

# for _ in range(3):
#     print(next(in_gen), end=" ")

# print(*list(in_gen)[:3])

"""
Подвиг 2. На вход поступает строка из целых чисел, записанных через пробел. С помощью функции map преобразовать
эту строку в список целых чисел, взятых по модулю. Сформируйте именно список lst из таких чисел. Отобразите его на
экране в виде набора чисел, идущих через пробел.
Sample Input:  -5 6 8 11 -10 0
Sample Output: 5 6 8 11 10 0
"""
# lst = [abs(int(val)) for val in input().split()]
# print(*lst)

"""
Подвиг 3. Вводится таблица целых чисел. Используя функцию map и генератор списков, преобразуйте список строк
lst_in (см. листинг) в двумерный список с именем lst2D, содержащий целые числа.
Выводить на экран ничего не нужно, только сформировать список lst2D на основе введенных данных.

"""
# lst_in = ['8 11 -5', '3 4 10', '-1 -2 3', '4 5 6']
# lst2D = [[int(x) for x in i.split()] for i in lst_in]
# print(lst2D)

"""
Подвиг 4. На вход программы поступает строка в формате:
ключ_1=значение_1 ключ_2=значение_2 ... ключ_N=значение_N
Необходимо с помощью функции map преобразовать ее в кортеж tp вида:
tp = (('ключ_1', 'значение_1'), ('ключ_2', 'значение_2'), ..., ('ключ_N', 'значение_N'))
Выводить на экран ничего не нужно, только преобразовать строку в кортеж с именем tp.
Sample Input: house=дом car=машина men=человек tree=дерево
"""
# s = "house=дом car=машина men=человек tree=дерево"  # альтернатива Input()
# s_lst = s.split()
# tp = tuple(map(lambda x: tuple(x.split('=')), s_lst))
# print(tp)

"""
Подвиг 5. (Для учебных целей). Вводится строка. Необходимо в ней заменить кириллические символы на соответствующие
латинские обозначения (без учета регистра букв), а все остальные символы - на символ дефиса (-). Для этого в программе
определен словарь (см. листинг). Используя его, запишите функцию map, которая бы выдавала преобразованные фрагменты для
входной строки. На основе этой функции сформируйте строку, состоящую из преобразованных фрагментов
(фрагменты в строке должны идти друг за другом без пробелов). Отобразите результат на экране.
Sample Input: Привет Питон
Sample Output: privet-piton
"""
t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
     'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
     'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
     'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}

# in_str = "Привет Питон".lower()  # input().lower()
#
# out_str = map(lambda val: t.get(val) if val in t.keys() else val, in_str)
# print(*out_str, sep="")

"""
Подвиг 6. Вводятся названия городов в одну строчку через пробел. Необходимо определить функцию map, которая бы
возвращала названия городов только длиной более 5 символов. Вместо остальных названий - строку с дефисом ("-").
Сформировать список из полученных значений и отобразить его на экране в одну строчку через пробел.
Sample Input: Москва Уфа Вологда Тула Владивосток Хабаровск
Sample Output: Москва - Вологда - Владивосток Хабаровск
"""
in_str = "Москва Уфа Вологда Тула Владивосток Хабаровск" #  input()
lst = list(map(lambda val: val if len(val) > 5 else "-", in_str.split()))
print(lst)
