"""
Подвиг 1. Вводятся названия городов в одну строчку через пробел. Необходимо определить функцию filter, которая бы
возвращала только названия длиной более 5 символов. Извлеките первые три полученных значения с помощью функции next
и отобразите их на экране в одну строчку через пробел. (Полагается, что минимум три значения имеются).
Sample Input:  Тула Ульяновск Хабаровск Владивосток Омск Уфа
Sample Output: Ульяновск Хабаровск Владивосток
"""

# in_str = "Тула Ульяновск Хабаровск Владивосток Омск Уфа".split() # input().split()
# iter = filter(lambda val: len(val) > 5, in_str)
# print(*[next(iter) for _ in range(3)])

"""
Подвиг 2. Вводится список предметов в виде списка:
название_1: вес_1
...
название_N: вес_N
С помощью функции map, необходимо сначала преобразовать этот список строк в кортеж, элементами которого также являются
кортежи:
(('название_1', 'вес_1'), ..., ('название_N', 'вес_N'))
А, затем, отфильтровать (исключить) все предметы с весом менее 500, используя функцию filter. Вывести на экран список
оставшихся предметов (только их названия) в одну строчку через пробел.
P. S. Для считывания списка целиком в программе уже записаны начальные строчки.
Sample Input:
зонт=1000
палатка=10000
спички=22
котелок=543

Sample Output: зонт палатка котелок
"""

# lst_in = ['зонт=1000', 'палатка=10000', 'спички=22', 'котелок=543']
# # result_tuple = tuple(filter(lambda val: int(val[1]) > 500, map(lambda val: tuple(val.split("=")), lst_in)))
# print(*(val[0] for val in tuple(filter(lambda val: int(val[1]) > 500, map(lambda val: tuple(val.split("=")), lst_in)))))

"""
Подвиг 3. Вводится список целых чисел в одну строчку через пробел. Необходимо оставить в нем только двузначные числа.
Реализовать программу с использованием функции filter. Результат отобразить на экране в виде последовательности
оставшихся чисел в одну строчку через пробел.
Sample Input: 8 11 0 -23 140 1
Sample Output: 11 -23
"""
# in_str = list(filter(lambda val: 1 < len(val.replace("-", "")) < 3, input().split()))
# print(*list(filter(lambda val: 1 < len(val.replace("-", "")) < 3, input().split())))

"""
Подвиг 4. Саша и Галя коллекционируют монетки. Каждый из них решил записать номиналы монеток из своей коллекции.
Получилось два списка. Эти списки поступают на вход программы в виде двух строк из целых чисел, записанных через пробел.
Необходимо выделить значения, присутствующие в обоих списках и оставить среди них только четные. Результат вывести на
экран в виде строки полученных чисел в порядке их возрастания через пробел.
При реализации программы используйте функцию filter и кое-что еще (для упрощения программы), подумайте что.
Sample Input:
1 5 2 7 10 25 50 100
5 2 3 7 10 25 55
Sample Output: 2 10
"""
# alx = list(filter(lambda val: not val % 2, map(int, input().split())))
# gal = list(filter(lambda val: not val % 2, map(int, input().split())))
# print(*sorted(set(alx) and set(gal)))

"""
Подвиг 5. Вводится список email-адресов в одну строчку через пробел. Среди них нужно оставить только корректно
записанные адреса. Будем полагать, что к таким относятся те, что используют латинские буквы, цифры и символ
подчеркивания. А также в адресе должен быть символ "@", а после него символ точки "." (между ними, конечно же, могут
быть и другие символы). Результат отобразить в виде строки email-адресов, записанных через пробел.

Sample Input:   abc@it.ru dfd3.ru@mail biba123@list.ru sc_lib@list.ru $fg9@fd.com
Sample Output:  abc@it.ru biba123@list.ru sc_lib@list.ru
"""

from string import ascii_lowercase, ascii_uppercase

correct_chars = ascii_lowercase + ascii_uppercase + '1234567890_.@'


def email_check(email):
    if email.count('@') != 1 or email.count('.') != 1:
        return False
    elif email.index('.') < email.index('@'):
        return False

    for char in email:
        if char not in correct_chars:
            return False

    return True


in_lst = "abc@it.ru dfd3.ru@mail biba123@list.ru sc_lib@list.ru $fg9@fd.com".split()  # input().split()
print(*tuple(filter(email_check, in_lst)))