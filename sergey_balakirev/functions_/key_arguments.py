
# Пример из теории
# сортировка: в начале сортируются четные, после сортируются нечентные
# def id_odd(x):
#     return x % 2 # аналог в лямбде

# def key_sort(x):
#     return x if x % 2 == 0 else 100 + x
#
#
# a = [4, 3, -10, 1, 7, 12]
# # b = sorted(a, key=lambda x: x % 2)
# # print(b) № [4, -10, 12, 3, 1, 7]
# # отсортировать по четности и после группы отсортировать по возрастанию
# b = sorted(a, key=lambda x: x if x % 2 == 0 else 100 + x)
# print(b)

import math
"""
Подвиг 1. На вход программы поступает список наименований рек, записанных в одну строчку через пробел.
Необходимо отсортировать этот список в порядке убывания длин названий. Результат вывести в одну строчку через пробел.
Sample Input:  Лена Енисей Волга Дон
Sample Output: Енисей Волга Лена Дон
"""
# print(sorted(input().split(), key=len, reverse=True))

"""
Подвиг 2. На вход программы поступает строка в формате:
предмет_1=вес_1
...
предмет_N=вес_N
Веса предметов заданы целыми числами. Необходимо на основе этих данных сформировать словарь и, затем, на основе этого
словаря сформировать список предметов по убыванию их веса. (В списке должны находиться только наименования предметов
без их весов).
Отобразить полученный результат в виде строки с названиями через пробел.
P. S. Для считывания списка целиком в программе уже записаны начальные строчки.

Sample Input:
ножницы=100
котелок=500
спички=20
зажигалка=40
зеркальце=50
Sample Output:  котелок ножницы зеркальце зажигалка спички
"""
# lst_in = ['ножницы=100', 'котелок=500', 'спички=20', 'зажигалка=40', 'зеркальце=50']
#
# # my_dict = dict((int(cost), name) for name, cost in (line.split("=") for line in lst_in))
# # lst_s = sorted((x for x in my_dict.keys()),reverse=True)
# # print(*tuple(my_dict[x] for x in lst_s))
# # альтернативная версия, два разных варианта генерации словаря
# d_other = {k_:int(v_)   for lst_val in lst_in for k_, v_ in [lst_val.split("=")]}
# # другой вариант генерации словаря
# # d_other = {k: int(v) for k, v in [l.split('=') for l in lst_in]}
# print(*sorted(d_other, key=lambda x: d_other[x], reverse=True))

"""
Подвиг 3. Известно, что порядок нот, следующий: до, ре, ми, фа, соль, ля, си. На вход программы поступает строка
с набором этих нот, записанных через пробел. Необходимо сформировать список из входной строки с нотами,
отсортированными указанным образом. Результат вывести в виде строки из нот, записанными через пробел.
Sample Input:  до фа соль до ре фа ля си
Sample Output: до до ре фа фа соль ля си
"""
# notes = ['до', 'ре', 'ми', 'фа', 'соль', 'ля', 'си']
# print(*sorted(input().lower().split(), key=lambda x:notes.index(x)))

"""
Значимый подвиг 4. Имеется таблица с данными, представленная в формате:

Номер;Имя;Оценка;Зачет
1;Иванов;3;Да
2;Петров;2;Нет
...
N;Балакирев;4;Да

Эти данные необходимо представить в виде двумерного (вложенного) кортежа. Все числа должны быть представлены
как целые числа. Затем, отсортировать данные так, чтобы столбцы шли в порядке:
Имя;Зачет;Оценка;Номер
Реализовать эту операцию с помощью сортировки. Результат должен быть представлен также в виде двумерного кортежа
и присвоен переменной с именем t_sorted.
Программа ничего не должна выводить на экран, только формировать двумерный кортеж с переменной t_sorted.
Sample Input:
Номер;Имя;Оценка;Зачет
1;Портос;5;Да
2;Арамис;3;Да
3;Атос;4;Да
4;д'Артаньян;2;Нет
5;Балакирев;1;Нет
Sample Output: True
Задвние было толком не понято, рещено как есть
"""
# Для считывания списка целиком в программе уже записаны начальные строчки.
# lst_in = ['Номер;Имя;Оценка;Зачет', '1;Портос;5;Да', '2;Арамис;3;Да', '3;Атос;4;Да', "4;д'Артаньян;2;Нет", '5;Балакирев;1;Нет']
# def g(str_lst):
#     x = str_lst.split(";")
#     if x[2].isdigit() and x[0].isdigit():
#         return x[1], x[3], int(x[2]), int(x[0])
#     else:
#         return x[1], x[3], x[2], x[0]
#
#
# t_sorted = tuple([tuple(g(i)) for i in lst_in])
# print(t_sorted)

"""

"""
rang = ['рядовой', 'сержант', 'старшина', 'прапорщик', 'лейтенант', 'капитан', 'майор', 'подполковник', 'полковник']
lst_in = ['Атос=лейтенант', 'Портос=прапорщик', "д'Артаньян=капитан", 'Арамис=лейтенант', 'Балакирев=рядовой']
lst = sorted([val.split("=") for val in lst_in], key=lambda x: rang.index(x[1]))
print(lst)
